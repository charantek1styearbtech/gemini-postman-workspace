{
	"info": {
		"_postman_id": "f03eca7d-3e22-4555-be75-93100707a25a",
		"name": "Gemini API",
		"description": "Here all the information, resources and guide to use the workspace will be here!.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41693711",
		"_collection_link": "https://www.postman.com/navigation-specialist-67620572/workspace/gemini/collection/41693711-f03eca7d-3e22-4555-be75-93100707a25a?action=share&source=collection_link&creator=41693711"
	},
	"item": [
		{
			"name": "Text Generation",
			"item": [
				{
					"name": "text-only-input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200',function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test('Response Content-Type is application.json', function(){\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"})\r",
									"\r",
									"pm.test('Candidates array, content object, parts array, and role field structure are valid', function(){\r",
									"    const responseData=pm.response.json()\r",
									"    pm.expect(responseData.candidates).to.be.an('array');\r",
									"    responseData.candidates.forEach((candidate)=>{\r",
									"        pm.expect(candidate.content).to.be.a('object');\r",
									"        candidate.content.parts.forEach(function(part) {\r",
									"            pm.expect(part).to.be.an('object');\r",
									"        }); \r",
									"        pm.expect(candidate.content.role).to.be.a('string');\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Write a story about a magic backpack.\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generation_config\": {\r\n      \"temperature\": 0.7,\r\n  \t\t\"top_k\": 40,\r\n  \t\t\"top_p\": 0.9,\r\n  \t\t\"max_output_tokens\": 200\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/{{version}}/models/{{model_name}}:generateContent?key={{api_key}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model_name}}:generateContent"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "The Gemini API can generate text output from text input."
		}
	]
}